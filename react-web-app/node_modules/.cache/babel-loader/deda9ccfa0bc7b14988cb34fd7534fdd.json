{"ast":null,"code":"var _jsxFileName = \"/Users/felixleber/super-supply/src/modules/StateManager.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InfoCard from \"./views/InfoCard\";\nimport HorizontalLinearStepper from \"./views/Steppers\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCarrot, faTruck, faTruckLoading, faDollyFlatbed, faStore } from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = theme => ({\n  title: {\n    display: \"inline-block\",\n    padding: 40,\n    color: theme.palette.secondary.light,\n    fontSize: 48\n  }\n});\n\nvar transactionData = [{\n  id: \"Banas0012\",\n  date: \"2014-01-01T23:28:56.782Z\",\n  weight: \"303\",\n  location: {\n    lat: \"50.110924\",\n    long: \"8.682127\"\n  }\n}, {\n  id: \"Banas0013\",\n  date: \"2018-01-01T23:28:56.782Z\"\n}];\n\nclass StateManager extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0\n    };\n  }\n\n  getStepContent(step) {\n    return this.getSteps()[this.state.activeStep];\n  }\n\n  getSteps() {\n    return [plantation, shipping, packaging, wholesale, retail];\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(HorizontalLinearStepper, {\n      activeStep: this.state.activeStep,\n      getSteps: this.getSteps(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.getStepContent(this.state.activeStep)), React.createElement(Grid, {\n      container: true,\n      spacing: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, transactionData.map(transaction => React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(InfoCard, {\n      title: this.getStepContent(this.state.activeStep),\n      transactionData: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nStateManager.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(styles)(StateManager);\nconst plantation = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faCarrot,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), \" Plantation\");\nconst shipping = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faTruck,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), \" Shipping\");\nconst packaging = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faTruckLoading,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), \" Packaging\");\nconst wholesale = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faDollyFlatbed,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}), \" Wholesale\");\nconst retail = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, React.createElement(FontAwesomeIcon, {\n  icon: faStore,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), \" Retail\");","map":{"version":3,"sources":["/Users/felixleber/super-supply/src/modules/StateManager.jsx"],"names":["React","Component","PropTypes","withStyles","InfoCard","HorizontalLinearStepper","Grid","FontAwesomeIcon","faCarrot","faTruck","faTruckLoading","faDollyFlatbed","faStore","styles","theme","title","display","padding","color","palette","secondary","light","fontSize","transactionData","id","date","weight","location","lat","long","StateManager","state","activeStep","getStepContent","step","getSteps","plantation","shipping","packaging","wholesale","retail","render","classes","props","wrapper","map","transaction","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport InfoCard from \"./views/InfoCard\";\nimport HorizontalLinearStepper from \"./views/Steppers\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCarrot,\n  faTruck,\n  faTruckLoading,\n  faDollyFlatbed,\n  faStore\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = theme => ({\n  title: {\n    display: \"inline-block\",\n    padding: 40,\n    color: theme.palette.secondary.light,\n    fontSize: 48\n  }\n});\n\nvar transactionData = [\n  {\n    id: \"Banas0012\",\n    date: \"2014-01-01T23:28:56.782Z\",\n    weight: \"303\",\n    location: {\n      lat: \"50.110924\",\n      long: \"8.682127\"\n    }\n  },\n  {\n    id: \"Banas0013\",\n    date: \"2018-01-01T23:28:56.782Z\"\n  }\n];\n\nclass StateManager extends Component {\n  getStepContent(step) {\n    return this.getSteps()[this.state.activeStep];\n  }\n\n  getSteps() {\n    return [plantation, shipping, packaging, wholesale, retail];\n  }\n\n  state = {\n    activeStep: 0\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <HorizontalLinearStepper\n          activeStep={this.state.activeStep}\n          getSteps={this.getSteps()}\n        />\n        <div className={classes.wrapper}>\n          <div className={classes.title}>\n            {this.getStepContent(this.state.activeStep)}\n          </div>\n          <Grid container spacing={10}>\n            {transactionData.map(transaction => (\n              <Grid item xs={3}>\n                <InfoCard\n                  title={this.getStepContent(this.state.activeStep)}\n                  transactionData={transaction}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nStateManager.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(StateManager);\n\nconst plantation = (\n  <span>\n    <FontAwesomeIcon icon={faCarrot} /> Plantation\n  </span>\n);\n\nconst shipping = (\n  <span>\n    <FontAwesomeIcon icon={faTruck} /> Shipping\n  </span>\n);\n\nconst packaging = (\n  <span>\n    <FontAwesomeIcon icon={faTruckLoading} /> Packaging\n  </span>\n);\n\nconst wholesale = (\n  <span>\n    <FontAwesomeIcon icon={faDollyFlatbed} /> Wholesale\n  </span>\n);\n\nconst retail = (\n  <span>\n    <FontAwesomeIcon icon={faStore} /> Retail\n  </span>\n);\n"]},"metadata":{},"sourceType":"module"}