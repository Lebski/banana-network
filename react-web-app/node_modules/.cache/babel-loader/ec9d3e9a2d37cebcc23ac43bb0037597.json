{"ast":null,"code":"import _objectSpread from \"/Users/felixleber/super-supply/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/felixleber/super-supply/src/modules/views/ReadyForTradeModal.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nvar namespace = \"sc.demonstrator.net\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  button: {\n    marginRight: theme.spacing.unit * 1\n  }\n});\n\nclass SimpleModal extends IconButton {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      anchorEl: null,\n      selectedIndex: 2\n    };\n\n    this.postTakeover = () => {\n      var bodyObject = {\n        $class: namespace + \".ProductRelease\",\n        product: namespace + \".Product#\" + this.props.productId,\n        issuer: namespace + \".Company#\" + this.getCompanyFromIndex(this.state.selectedIndex)\n      };\n      console.log(bodyObject);\n      this.setState(_objectSpread({}, this.state, {\n        isFetching: true\n      }));\n      fetch(\"http://34.73.109.142:3000/api/ProductRelease\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(bodyObject)\n      }).then(response => {\n        this.setState({\n          responseStatus: response.status,\n          responseMessage: response.statusText,\n          isFetching: false\n        });\n        console.log(response);\n      }).catch(e => console.log(e));\n    };\n\n    this.getResponseMessage = () => {\n      if (this.state.isFetching === true) {\n        return React.createElement(CircularProgress, {\n          className: this.props.classes.progress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.responseStatus === 200) {\n        return React.createElement(Typography, {\n          component: \"p\",\n          className: this.props.classes.responseMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Success!\");\n      } else if (this.state.responseStatus === 0) {\n        return \"\";\n      }\n\n      return React.createElement(Typography, {\n        component: \"p\",\n        className: this.props.classes.responseMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Error: \", this.state.responseMessage);\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleClickListItem = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleMenuItemClick = (event, index) => {\n      this.setState({\n        selectedIndex: index,\n        anchorEl: null\n      });\n    };\n\n    this.handleMenuClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  getCompanyFromIndex(index) {\n    switch (index) {\n      case 0:\n        return \"BananasCorpSouthAmerica\";\n\n      case 1:\n        return \"TruckfleetCo\";\n\n      case 2:\n        return \"WeArePackagingPower\";\n\n      case 3:\n        return \"Middlepeople\";\n\n      case 4:\n        return \"EinzelhandelsGmbH\";\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          availableUsers = _this$props.availableUsers;\n    const anchorEl = this.state.anchorEl;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: getModalStyle(),\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Mark as ready for trade\"), React.createElement(Typography, {\n      variant: \"p\",\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Here you can mark the product ready for trading. After this step the next party can take over the item for the next production step.\"), React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": \"lock-menu\",\n      \"aria-label\": \"Which user should be used?\",\n      onClick: this.handleClickListItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Which user should be used?\",\n      secondary: availableUsers[this.state.selectedIndex],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      id: \"users-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, availableUsers.map((option, index) => React.createElement(MenuItem, {\n      key: option,\n      selected: index === this.state.selectedIndex,\n      onClick: event => this.handleMenuItemClick(event, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, option))), React.createElement(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Ready\\xA0\", React.createElement(EditIcon, {\n      className: classes.rightIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"send\")), React.createElement(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Discard\\xA0\", React.createElement(DeleteIcon, {\n      className: classes.rightIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired\n}; // We need an intermediary variable for handling the recursive nesting.\n\nconst ReadyForTradeModal = withStyles(styles)(SimpleModal);\nexport default ReadyForTradeModal;","map":{"version":3,"sources":["/Users/felixleber/super-supply/src/modules/views/ReadyForTradeModal.jsx"],"names":["React","PropTypes","withStyles","Typography","Modal","EditIcon","IconButton","DeleteIcon","Button","List","ListItem","ListItemText","MenuItem","Menu","namespace","getModalStyle","top","left","transform","styles","theme","paper","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","outline","button","marginRight","SimpleModal","state","open","anchorEl","selectedIndex","postTakeover","bodyObject","$class","product","props","productId","issuer","getCompanyFromIndex","console","log","setState","isFetching","fetch","method","headers","Accept","body","JSON","stringify","then","response","responseStatus","status","responseMessage","statusText","catch","e","getResponseMessage","classes","progress","handleOpen","handleClose","handleClickListItem","event","currentTarget","handleMenuItemClick","index","handleMenuClose","render","availableUsers","root","Boolean","map","option","rightIcon","propTypes","object","isRequired","ReadyForTradeModal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nvar namespace = \"sc.demonstrator.net\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  button: {\n    marginRight: theme.spacing.unit * 1\n  }\n});\n\nclass SimpleModal extends IconButton {\n  state = {\n    open: false,\n    anchorEl: null,\n    selectedIndex: 2\n  };\n\n  postTakeover = () => {\n    var bodyObject = {\n      $class: namespace + \".ProductRelease\",\n      product: namespace + \".Product#\" + this.props.productId,\n      issuer:\n        namespace +\n        \".Company#\" +\n        this.getCompanyFromIndex(this.state.selectedIndex)\n    };\n    console.log(bodyObject);\n\n    this.setState({ ...this.state, isFetching: true });\n    fetch(\"http://34.73.109.142:3000/api/ProductRelease\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bodyObject)\n    })\n      .then(response => {\n        this.setState({\n          responseStatus: response.status,\n          responseMessage: response.statusText,\n          isFetching: false\n        });\n        console.log(response);\n      })\n      .catch(e => console.log(e));\n  };\n\n  getCompanyFromIndex(index) {\n    switch (index) {\n      case 0:\n        return \"BananasCorpSouthAmerica\";\n      case 1:\n        return \"TruckfleetCo\";\n      case 2:\n        return \"WeArePackagingPower\";\n      case 3:\n        return \"Middlepeople\";\n      case 4:\n        return \"EinzelhandelsGmbH\";\n\n      default:\n        return null;\n    }\n  }\n\n  getResponseMessage = () => {\n    if (this.state.isFetching === true) {\n      return <CircularProgress className={this.props.classes.progress} />;\n    }\n    if (this.state.responseStatus === 200) {\n      return (\n        <Typography\n          component=\"p\"\n          className={this.props.classes.responseMessage}\n        >\n          Success!\n        </Typography>\n      );\n    } else if (this.state.responseStatus === 0) {\n      return \"\";\n    }\n    return (\n      <Typography component=\"p\" className={this.props.classes.responseMessage}>\n        Error: {this.state.responseMessage}\n      </Typography>\n    );\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleClickListItem = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ selectedIndex: index, anchorEl: null });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes, availableUsers } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <div>\n        <IconButton onClick={this.handleOpen}>\n          <EditIcon />\n        </IconButton>\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              Mark as ready for trade\n            </Typography>\n            <Typography variant=\"p\" id=\"modal-title\">\n              Here you can mark the product ready for trading. After this step\n              the next party can take over the item for the next production\n              step.\n            </Typography>\n\n            <div className={classes.root}>\n              <List component=\"nav\">\n                <ListItem\n                  button\n                  aria-haspopup=\"true\"\n                  aria-controls=\"lock-menu\"\n                  aria-label=\"Which user should be used?\"\n                  onClick={this.handleClickListItem}\n                >\n                  <ListItemText\n                    primary=\"Which user should be used?\"\n                    secondary={availableUsers[this.state.selectedIndex]}\n                  />\n                </ListItem>\n              </List>\n              <Menu\n                id=\"users-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n              >\n                {availableUsers.map((option, index) => (\n                  <MenuItem\n                    key={option}\n                    selected={index === this.state.selectedIndex}\n                    onClick={event => this.handleMenuItemClick(event, index)}\n                  >\n                    {option}\n                  </MenuItem>\n                ))}\n              </Menu>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Ready&nbsp;\n                <EditIcon className={classes.rightIcon}>send</EditIcon>\n              </Button>\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Discard&nbsp;\n                <DeleteIcon className={classes.rightIcon} />\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst ReadyForTradeModal = withStyles(styles)(SimpleModal);\n\nexport default ReadyForTradeModal;\n"]},"metadata":{},"sourceType":"module"}